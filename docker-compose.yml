services:
  db:
    image: postgres:17
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    volumes:
      - ./backend:/app
    environment:
      - DEBUG=${DEBUG}
      - DB_ENGINE=${DB_ENGINE}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - SECRET_KEY=django-insecure-kssc$dtafz&%p+jx_h8-dt)n+u+7@u=0!3cr5x0!fhsrp5takc
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:80
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    volumes:
      - ./frontend:/app:delegated
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000/api/v1
      - NODE_ENV=production
    ports:
      - "3000:3000"
    depends_on:
      - backend

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - ./frontend/dist:/usr/share/nginx/html:delegated
      - ./nginx/conf.d:/etc/nginx/conf.d:delegated
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data: