services:
  db:
    image: postgres:17
    volumes:
      - db_data:/var/lib/postgresql/data
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - app_network

  backend:
    build: ./backend
    working_dir: /app
    command: gunicorn --bind 0.0.0.0:8000 api.student_be.wsgi:application 
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - .env
    restart: unless-stopped
    expose:
      - 8000
    ports:
      - 8000:8000
    networks:
      - app_network
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - 3000:3000
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app_network

  nginx:
    build: ./nginx
    ports:
      - 80:80
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./frontend/dist:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
      - frontend
      - db
    restart: unless-stopped
    networks:   
      - app_network

volumes:
  static_volume:
  media_volume:
  db_data:

networks:
  app_network:
