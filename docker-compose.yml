services:
  db:
    image: postgres:17
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - app-network
  web:
    image: student_web:latest
    build:
      context: .
      dockerfile: Dockerfile
    container_name: student_web
    command:
      - sh
      - -c
      - |
        python manage.py wait_for_db &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn --bind 0.0.0.0:8088 --workers 2 --timeout 120 --keep-alive 5 --max-requests 1000 --max-requests-jitter 50 --log-level info student_be.wsgi:application
    volumes:
      - ./static:/app/static
      - ./staticfiles:/app/staticfiles  # ⚠ mount static ra ngoài
      - ./media:/app/media
    ports:
      - "8088:8088"
    environment:
      - DEBUG=1
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - app-network
    expose:
      - "8088"

  nginx:
    image: nginx:1.25
    container_name: student_nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
    depends_on:
      - web
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume: